name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
        python-version: [3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install libolm
        if: runner.os != 'Windows'
        run: |
          if [ $RUNNER_OS = Linux ]; then
              sudo apt install libolm3 libolm-dev -y
          else
              brew install libolm
          fi
      - name: Install ffmpeg
        if: runner.os != 'Windows'
        run: |
          if [ $RUNNER_OS = Linux ]; then
              sudo apt install ffmpeg -y
          fi
      - name: Install ffmpeg
        if: runner.os == 'Windows'
        run: |
              "%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
              choco feature enable -n=allowGlobalConfirmation
              choco install ffmpeg
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U tox tox-gh-actions
      - name: Run tests
        env:
          PLATFORM: ${{ runner.os }}
        run: tox
      - name: Upload coverage report
        uses: codecov/codecov-action@v1
        with:
          file: ./cov.xml

  check:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        component: [docker-full, docker-min, lint]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U tox
      - name: Run checks
        run: tox -e ${{ matrix.component }}
