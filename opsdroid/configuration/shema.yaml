welcome-message: bool()


parsers:
  ## Dialogflow (http://opsdroid.readthedocs.io/en/stable/matchers/dialogflow)
  - name: str()
    access-token: str()
    min-score: num()
  ## Rasanlu (http://opsdroid.readthedocs.io/en/stable/matchers/rasanlu)
  - name: str()
    project: str()
    token: str()
    min-score: num()
  #  ## Recast.ai (http://opsdroid.readthedocs.io/en/stable/matchers/recast.ai)
  - name: str()
    access-token: str()
    min-score: num()

    ## Regex (http://opsdroid.readthedocs.io/en/stable/matchers/regex)
  - name: str()
    enabled: bool()

  # Wit.ai (http://opsdroid.readthedocs.io/en/stable/matchers/wit.ai)
  - name: str()
    access-token: str()
    min-score: num()

  ## Luis.ai (http://opsdroid.readthedocs.io/en/stable/matchers/luis.ai)
  - name: str()
    appid: str()
    appkey: str()
    verbose: bool()
    min-score: num()

  ## Crontab (http://opsdroid.readthedocs.io/en/stable/matchers/crontab)
  - name: str()
    enabled: bool()

connectors:
  # websocket
  - name: str(required=False)
    # optional
    bot-name: str(required=False)
    max-connections: int(required=False)
    connection-timeout: int(required=False)

  ## Uncomment the connector(s) that you wish opsdroid to work on
  #  shell
  - name: str(required=False)
    # optional
    bot-name: str(required=False)

  ## Ciscospark (https://github.com/opsdroid/connector-ciscospark)
  - name: str(required=False)
    # required
    webhook-url:  str()   #???? #http(s)://<host>:<port>  # Url for Spark to connect to your bot
    access-token: str()

  ## Facebook (https://github.com/opsdroid/connector-facebook)
  - name: str(required=False)
    # required
    verify-token: str()
    page-access-token: str()
    # optional
    bot-name: str(required=False)

  ## Github (https://github.com/opsdroid/connector-github)
  - name: str(required=False)
    # required
    github-token: str()

  ## Matrix (https://github.com/opsdroid/connector-matrix)
  - name: str(required=False)
    # Required
    mxid: str()
    password: str()
    # Name of a single room to connect to
    room: str()
    # Alternatively, a dictionary of multiple rooms
    # One of these should be named 'main'
    rooms:
      'main': str()
      'other': str()
    # Optional
    homeserver: str(required=False)
    nick: str(required=False)

  ## Shell (https://github.com/opsdroid/connector-shell)
  - name: str(required=False)
    # optional
    bot-name: str(required=False)

  ## Slack (https://github.com/opsdroid/connector-slack)
  - name: str(required=False)
    # required
    api-token: str()
    # optional
    bot-name: str(required=False)
    default-room: str(required=False)
    icon-emoji: str(required=False)
    connect-timeout: int(required=False)

  ## Telegram (https://github.com/opsdroid/connector-telegram)
  - name: str() #telegram
    # required
    token: str() #"123456789:ABCDEFGHIJKLMNOPQRSTUVWXYZ-ZYXWVUT"  # Telegraf bot token
    # optional
    update_interval: num(required=False)     #0.5  # Interval between checking for messages
    default_user: str(required=False) #user1  # Default user to send messages to (overrides default room in connector)
    whitelisted_users: list() # List of users who can speak to the bot, if not set anyone can speak



  ## Twitter (https://github.com/opsdroid/connector-twitter)
  - name: str(required=False)
    # required
    consumer_key: str()
    consumer_secret: str()
    oauth_token: str()
    oauth_token_secret: str()
    # optional
    enable_dms: bool(required=False)
    enable_tweets: bool(required=False)

  ## Websocket (https://github.com/opsdroid/connector-websocket)
  - name: str(required=False)
    # optional
    bot-name: str(required=False)
    max-connections: int(required=False)
    connection-timeout: int(required=False)


## Database modules (optional)

  ## Mongo (https://github.com/opsdroid/database-mongo)
databases: list(str(),include('bases', required=False),include('sqlite', required=False))
---
bases:
  name: str()
  host: str()
  port:  str()
  database: str()

sqlite:
    name: str()
    file: str()
    table: str()



skills:
  ## Dance (https://github.com/opsdroid/skill-dance)
  - name: str( required=False)
  ## Hello (https://github.com/opsdroid/skill-hello)
  - name: str( required=False)
  ## Loudnoises (https://github.com/opsdroid/skill-loudnoises)
  - name: str( required=False)
    ## Seen (https://github.com/opsdroid/skill-seen)
  - name: str( required=False)

  #  Configurations for other skills uncomment desired skill to activate it.

  ## Cloudhealth (https://github.com/opsdroid/skill-cloudhealth)
  - name: str(required=False)
    # Required
    chapi-key: str()
    # Optional
    room: str( required=False)
    daily-billing-alerts: bool(required=False)
    monthly-billing-alerts: bool(required=False)


  ## Devtools (https://github.com/opsdroid/skill-devtools)
  - name: str(required=False)

  ## Dialogflow (https://github.com/opsdroid/skill-dialogflow)
  - name: str(required=False)
    include:
      - smalltalk : str( required=False)
    exclude:
      - smalltalk.agent : str( required=False)

  ## Food (https://github.com/opsdroid/skill-food)
  - name: str(required=False)
    api-key: str(required=False)

  ## Github (https://github.com/opsdroid/skill-github)
  - name: str(required=False)

  ## Google it (https://github.com/opsdroid/skill-google-it)
  - name: str(required=False)

    engine-url: str(required=False)
    query-arg: str(required=False)

  ## Grafana (https://github.com/opsdroid/skill-grafana)
  - name: str(required=False)
    room: str(required=False)

  ## Hacktoberfest (https://github.com/opsdroid/skill-hacktoberfest)
  - name:  str(required=False)

  ## Hello (https://github.com/opsdroid/skill-hello)
  - name:  str(required=False)

  ## Help (https://github.com/opsdroid/skill-help)
  #  skill_name <required_parameter> [optional_parameter] - Description of the skill

  ## Homeassistant (https://github.com/opsdroid/skill-homeassistant)
  - name:  str(required=False)
    room:  str(required=False)

  ## Iss (https://github.com/opsdroid/skill-iss)
  - name: str(required=False)
    # Required
    api-key: str()
    # Optional
    zoom: str(required=False)
    map-size: str(required=False)
    map-type: str(required=False)

  ## Loudnoises (https://github.com/opsdroid/skill-loudnoises)
  - name: str(required=False)

  ## Magpi (https://github.com/opsdroid/skill-magpi)
  - name: str(required=False)
    room: str(required=False)

  ## Please stand by (https://github.com/opsdroid/skill-please-stand-by)
  - name: str(required=False)

  ## Random (https://github.com/opsdroid/skill-random)
  - name: str(required=False)

  ## Seen (https://github.com/opsdroid/skill-seen)
  - name: str(required=False)

  ## Speakingclock (https://github.com/opsdroid/skill-speakingclock)
  - name: str(required=False)

  ## Travis (https://github.com/opsdroid/skill-travis)
  - name: str(required=False)
    room: str(required=False)  # (Optional) room to send alert to
    travis_endpoint: str(required=False)  # (Optional) endpoint for travis, change to "com" if using enterprise Travis CI

  ## Vault (https://github.com/opsdroid/skill-vault)
  - name: str(required=False)
    # Required
    vault-url: str()
    vault-token: str()
    # Optional
    announce-on-seal: bool(required=False)
    announce-sealed: bool(required=False)
    announce-unsealed: bool(required=False)

  ## Weather (https://github.com/opsdroid/skill-weather)
  - name: str(required=False)
    # Required
    city: str()
    unit: str()
    api-key: str()

  ## Word of the day (https://github.com/opsdroid/skill-word-of-the-day)
  - name: str()

  ## Words (https://github.com/opsdroid/skill-words)
  - name: str()



